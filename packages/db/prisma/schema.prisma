// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int      @id @default(autoincrement())
  username   String   @unique
  email      String?  @unique
  createdAt  DateTime @default(now())
  messages   Message[]
  rooms      Room[]    @relation("RoomCreator")
  joinedRooms RoomParticipants[]
}

model Room {
  id         Int                 @id @default(autoincrement())
  name       String
  createdBy  User?      @relation("RoomCreator", fields: [createdById], references: [id])
  createdById Int?
  createdAt  DateTime  @default(now())
  messages   Message[]
  participants RoomParticipants[]
}

model Message {
  id         Int      @id @default(autoincrement())
  content    String
  user       User     @relation(fields: [userId], references: [id])
  userId     Int
  room       Room     @relation(fields: [roomId], references: [id])
  roomId     Int
  sentAt     DateTime @default(now())
}

model RoomParticipants {
  id         Int      @id @default(autoincrement())
  user       User     @relation(fields: [userId], references: [id])
  userId     Int
  room       Room     @relation(fields: [roomId], references: [id])
  roomId     Int
  joinedAt   DateTime @default(now())

  @@unique([userId, roomId])
}