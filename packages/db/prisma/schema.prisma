generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String   @id @default(cuid())
  name     String
  email          String?  @unique
  emailVerified  DateTime?
  image          String?
  createdAt      DateTime @default(now())

  messages       Message[]
  rooms          Room[]    @relation("RoomCreator")
  joinedRooms    RoomParticipants[]
  accounts       Account[]
  sessions       Session[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String @unique
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime

  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Room {
  id           Int                 @id @default(autoincrement())
  name         String
  createdBy    User?      @relation("RoomCreator", fields: [createdById], references: [id])
  createdById  String?
  createdAt    DateTime  @default(now())

  messages     Message[]
  participants RoomParticipants[]
}

model Message {
  id           Int      @id @default(autoincrement())
  content      String
  user         User     @relation(fields: [userId], references: [id])
  userId       String
  room         Room     @relation(fields: [roomId], references: [id])
  roomId       Int
  sentAt       DateTime @default(now())
}

model RoomParticipants {
  id         Int      @id @default(autoincrement())
  user       User     @relation(fields: [userId], references: [id])
  userId     String
  room       Room     @relation(fields: [roomId], references: [id])
  roomId     Int
  joinedAt   DateTime @default(now())

  @@unique([userId, roomId])
}
